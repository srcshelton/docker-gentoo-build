# syntax=docker/dockerfile:1.4

# init:
#    Create a base-image with a default Gentoo stage3 image and common
#    variables required to rebuild a custom base system.
#    This image *does not* import a package repo, as this can be more
#    efficiently mounted when the resulting image is run.

# hadolint global ignore=SC2015
#

# We're not using these, but defining them here prevents podman from
# complaining about unconsumed build arguments...
#
ARG TARGETARCH
ARG TARGETOS
ARG TARGETPLATFORM

ARG ARCH

ARG gentoo_stage3_image="docker.io/gentoo/stage3"
ARG gentoo_stage3_id=""
ARG stage3_name="localhost/gentoo-stage3"
ARG entrypoint_sum=""

ARG stage3_flags_file="/usr/libexec/stage3_flags.sh"

ARG environment_file="/usr/libexec/environment.sh"
ARG environment_filter="^(declare -x|export) (EDITOR|GENTOO_PROFILE|HOME|HOSTNAME|LESS(OPEN)?LS_COLORS|(MAN)?PAGER|(OLD)?PWD|PATH|(|SYS|PORTAGE_CONFIG)ROOT|SHLVL|TERM)="


# -----------------------------------------------------------------------------

# linter ignore=EF0003
FROM "${stage3_name}:latest"

ARG ARCH

ARG gentoo_stage3_image
ARG gentoo_stage3_id
ARG entrypoint_sum

ARG stage3_flags_file

ARG environment_file
ARG environment_filter


LABEL maintainer="stuart@shelton.me"
LABEL description="Deploy gentoo base-image and build binary package(s) for named Portage atom"
LABEL notices="To build certain packages, such as sys-libs/glibc, this container must be started with '--cap-add SYS_PTRACE'"

LABEL stage3-from="${gentoo_stage3_image}:${gentoo_stage3_id}"
LABEL entrypoint-sum="${entrypoint_sum}"


# Try to get nice colours ...
#
ARG SET_TERM="${TERM:-xterm}"
ENV TERM="${SET_TERM}"


# Perform initial setup ...
#
RUN <<-'EOT' /bin/sh
	set -eu

	echo >&2 "Creating initial image from '${gentoo_stage3_image}' for" \
		"'${ARCH:-"<undefined>"}' ..."
	set -u
	mkdir -p "${PKGDIR}" "${DISTDIR}" "${PORTAGE_LOGDIR}" "${PORTAGE_TMPDIR}" \
		"${RPMDIR}"
	rm -r /etc/portage
	mkdir /etc/portage
EOT

COPY etc/ /etc/
RUN <<-'EOT' /bin/sh
	set -eu

	for base in \
		package.accept_keywords \
		package.mask \
		package.unmask \
		package.use
	do
		for object in "/etc/portage/${base}."*; do
			test "${object}" != '/etc/portage/package.use.init' || continue
			test "${object}" != '/etc/portage/package.use.build' || continue
			test ! -e "${object}" || rm -rf "${object}"
		done
	done

	if [ -n "${ARCH:-}" ]; then
		if [ -f "/etc/portage/profile/use.mask.${ARCH}" ]; then
			mv "/etc/portage/profile/use.mask.${ARCH}" \
				/etc/portage/profile/use.mask
		fi
	fi
	rm -f /etc/portage/profile/use.mask.*
EOT


# Confirm correct extraction...
#
RUN <<-'EOT' /bin/sh
	set -eu

	test -s /etc/timezone
	test -e /etc/portage/package.accept_keywords
	test -s /etc/portage/profile/package.provided

	if [ -n "${ARCH:-}" ]; then
		echo >&2 "INFO:  Looking for '${ARCH}' architecture-specific" \
			"keywords ..."
		if [ -s "/etc/portage/package.accept_keywords.${ARCH}" ]; then
			echo >&2 "NOTE:  Found architecture-specific keywords file" \
				"'/etc/portage/package.accept_keywords.${ARCH}' ..."
			if [ -d /etc/portage/package.accept_keywords ] ; then
				mv -v \
					"/etc/portage/package.accept_keywords.${ARCH}" \
					"/etc/portage/package.accept_keywords/${ARCH}"
			else
				cat "/etc/portage/package.accept_keywords.${ARCH}" >> \
					/etc/portage/package.accept_keywords
			fi
		fi
	fi

	find /etc/portage/ \
		-mindepth 1 \
		-maxdepth 1 \
		-type f \
		-name 'package.accept_keywords.*' \
		-exec rm -v {} +
EOT

# We can't use 'RUN [ -d ... ]' because this is interpreted as being
# exec-form...
#
# linter ignore=SC2015
RUN <<-'EOT' /bin/sh
	set -eu

	test -d /etc/portage/package.use.init
	test ! -e /etc/portage/package.use
	mv /etc/portage/package.use.init /etc/portage/package.use || :
	test -e /etc/portage/package.use
EOT

RUN <<-'EOT' /bin/sh
	set -eu

	ln -sf /usr/share/portage/config/make.globals /etc/portage/make.globals
	ln -sf "/var/db/repo/gentoo/profiles/${GENTOO_PROFILE}" \
		/etc/portage/make.profile
EOT

COPY entrypoint.sh /usr/libexec/
RUN test -s /usr/libexec/entrypoint.sh

RUN <<-'EOT' /bin/sh
	set -eu

	sed -i \
		-e "s|__JOBS__|${JOBS}|" \
		-e "s|__MAXLOAD__|${MAXLOAD}|" \
		-e "s|__PROFILE__|${GENTOO_PROFILE}|" \
		-e "s|__FLAGSFILE__|${stage3_flags_file}|" \
		-e "s|__ENVFILE__|${environment_file}|" \
		-e "s:__ENVFILTER__:${environment_filter}:" \
			/usr/libexec/entrypoint.sh
	chmod 0755 /usr/libexec/entrypoint.sh
	sh -n /usr/libexec/entrypoint.sh
EOT

ENTRYPOINT ["/usr/libexec/entrypoint.sh"]
CMD ["app-shells/bash"]

# linter ignore=ED0004
# vi: set colorcolumn=80 noexpandtab shiftwidth=4 syntax=dockerfile tabstop=4 nowrap:
